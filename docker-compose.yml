version: '3.8'

networks:
  corp:
    driver: bridge

services:
  base-image:
    container_name: my-base-image
    build:
      context: ./
      args:
        - NODE_ENV=${NODE_ENV}
        - BUILD_FLAG=-c ${NODE_ENV}
    image: my-base-image:nx-base

  share-a-meal-api:
    container_name: api
    build:
      context: ./
      cache_from:
        - my-base-image:nx-base
      dockerfile: ./apps/api/Dockerfile.web
      args:
        - NODE_ENV=${NODE_ENV}
        - BUILD_FLAG=-c ${NODE_ENV}
    image: api-server:nx-dev
    ports:
      - 3000:3000
    depends_on:
      - base-image
      - mysql
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=3000
      - MYSQL_USERNAME=root
      - MYSQL_PASSWORD=admin
      - MYSQL_HOSTNAME=mysql
      # api talks to the internal mysql port!
      - MYSQL_PORT=3306
      - MYSQL_DATABASENAME=share-a-meal
      - LOGLEVEL=debug # or trace, info, debug, warn, error
    networks:
      - corp
    # restart: on-failure

  share-a-meal-ui:
    container_name: frontend
    build:
      context: ./
      cache_from:
        - node:16-alpine
      dockerfile: ./apps/share-a-meal-ui/Dockerfile.web
      args:
        - NODE_ENV=${NODE_ENV}
        - BUILD_FLAG=-c ${NODE_ENV}
    image: share-a-meal-ui:nx-dev
    depends_on:
      - base-image
    ports:
      - 4200:4200
    environment:
      NODE_ENV: '${NODE_ENV}'
      PORT: 4200
    networks:
      - corp
    # restart: on-failure

  mysql:
    container_name: mysql
    image: mysql:5.7
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    volumes:
      # All the .sql's in the given directory will be imported.
      # But only on first install of the db image!
      - ./apps/api/src/database:/docker-entrypoint-initdb.d
    environment:
      - MYSQL_ROOT_PASSWORD=admin
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - 3307:3306
    expose:
      # Opens port on the container
      - 3307
    networks:
      - corp

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    volumes:
      - /var/lib/rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    # env_file:
    #   - ./rabbitmq.env
