name: Build and publish Docker images

on:
  push:
    branches: [heroku-deployment]

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  # IMAGE_NAME: my-base-image
  REGISTRY: 'registry.digitalocean.com/avansinformatica-container-registry'

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/

  build-base-image:
    # Ensure test job passes before pushing image.
    # needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    env:
      IMAGE_NAME: my-base-image
    steps:
      - uses: actions/checkout@v2
      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600

      - name: Push image to digitalocean
        run: |
          doctl registry login
          docker tag $IMAGE_NAME:latest $REGISTRY/$IMAGE_NAME
          docker push $REGISTRY/$IMAGE_NAME

  build-api:
    # Ensure test job passes before pushing image.
    needs: build-base-image
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    env:
      IMAGE_NAME: share-a-meal-api
    steps:
      - uses: actions/checkout@v2
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600

      - name: Build image
        run: |
          doctl registry login
          docker build . --file ./apps/api/Dockerfile --tag $IMAGE_NAME:latest

      - name: Push image to digitalocean
        run: |
          doctl registry login
          docker tag $IMAGE_NAME:latest $REGISTRY/$IMAGE_NAME
          docker push $REGISTRY/$IMAGE_NAME

  # build-UI:
  #   # Ensure test job passes before pushing image.
  #   # needs: test
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'push'
  #   env:
  #     IMAGE_NAME: share-a-meal-ui
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Build image
  #       run: docker build . --file Dockerfile --tag $IMAGE_NAME

  #     - name: Install doctl
  #       uses: digitalocean/action-doctl@v2
  #       with:
  #         token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

  #     - name: Log in to DigitalOcean Container Registry with short-lived credentials
  #       run: doctl registry login --expiry-seconds 600

  #     - name: push image to digitalocean
  #       run: |
  #         doctl registry login
  #         docker tag $IMAGE_NAME $REGISTRY/$IMAGE_NAME
  #         docker push $REGISTRY/$IMAGE_NAME

  #Run the container in the droplet
  deploy:
    needs: build-api
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v2
      - name: Executing remote command
        uses: appleboy/ssh-action@master
        with:
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{secrets.DIGITALOCEAN_ACCESS_TOKEN}} # ${{ secrets.USERNAME }}
          PORT: ${{ secrets.PORT }}
          password: ${{secrets.DIGITALOCEAN_ACCESS_TOKEN}} # ${{ secrets.PASSWORD }}
          script:
            # remove container and start new one
            docker stop $(echo $IMAGE_NAME)
            docker rm $(echo $IMAGE_NAME)
            docker run -d \
            --restart always \
            --env-file .env \
            -p 8000:8000 \
            --name $(echo $IMAGE_NAME) \
            $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) # $(echo $COMMAND)
